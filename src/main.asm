                device zxspectrum48

                org 0x4010

                include "labels.inc"

Buffer equ 0x5b00


Start:
                ld sp, 0x5c00
                xor a
                out (0xfe), a
                ld a, 0xfe
                ld i, a 
                im 2
                jp 0x5cfa


                org 0x5c00
                db 0x20, 0x1f, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00,   0x01, 0x00, 0x00, 0x05, 0x00, 0x01, 0x00, 0x00
                db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,   0x47, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30
                db 0x30, 0x07, 0x30, 0x35, 0x00, 0xb8, 0x12, 0xff,   0xff, 0x45, 0x58, 0x54, 0x52, 0x41, 0x85, 0x5b
                db 0x5c, 0x86, 0x42, 0x4f, 0x4e, 0x55, 0x53, 0x00,   0x42, 0x42, 0x42, 0x42, 0x42, 0x47, 0x47, 0x47
                db 0x47, 0x47, 0xcd, 0x1a, 0x83, 0x3e, 0xff, 0xcd,   0xc0, 0x5f, 0xcd, 0x06, 0xa8, 0x3e, 0x80, 0xcd
                db 0xc0, 0x5f, 0xcd, 0x3e, 0xa7, 0x21, 0x26, 0x81,   0x01, 0x0a, 0x0a, 0xc5, 0xcd, 0x68, 0x5c, 0x09
                db 0x0e, 0x0b, 0x09, 0xc1, 0x10, 0xf5, 0x18, 0x2b,   0x11, 0x13, 0x82, 0x06, 0x00, 0x13, 0x1a, 0xed
                db 0xa1, 0xc0, 0xaf, 0xb1, 0x20, 0xf7, 0x01, 0xfe,   0xf7, 0xed, 0x78, 0x1f, 0x01, 0x06, 0x0d, 0x30
                db 0x15, 0x1f, 0x01, 0x09, 0x12, 0x30, 0x0f, 0x1f,   0x01, 0x0f, 0x0e, 0x30, 0x09, 0x1f, 0x01, 0x0f
                db 0x14, 0x30, 0x03, 0x01, 0x00, 0x03, 0xed, 0x43,   0xdf, 0x69, 0x00, 0x00, 0x00, 0x21, 0x00, 0x6d
                db 0x75, 0x11, 0x01, 0x6d, 0x01, 0xff, 0x01, 0xed,   0xb0, 0x21, 0x00, 0x5c, 0x11, 0x42, 0x66, 0x01
                db 0x38, 0x00, 0xed, 0xb0, 0x21, 0xd8, 0x76, 0x06,   0x06, 0x36, 0x01, 0x23, 0x10, 0xfb, 0x21, 0x00
                db 0x5d, 0x01, 0x04, 0x48, 0x11, 0xca, 0x65, 0x3e,   0x24, 0xcd, 0x5d, 0xa6, 0x3e, 0x07, 0x32, 0x02
                db 0x5d, 0xaf, 0x32, 0xae, 0x88, 0xcd, 0x39, 0x83,   0x3e, 0x02, 0x32, 0x52, 0x84, 0xfd, 0x21, 0x00
                db 0x5d, 0xcd, 0xc3, 0x95, 0xcd, 0x65, 0x83, 0xcd,   0xeb, 0xff, 0x3e, 0x46, 0x28, 0x02, 0x3e, 0x07
                db 0xcd, 0x5a, 0x83, 0xaf, 0x32, 0x5f, 0x84, 0xc3,   0xfe, 0x8d

Entry:          call Joystuff
                call X5d4f

                org 0x5d00
                db 0x3e, 0x0a, 0x21, 0x5c, 0x6b, 0x16, 0x5d, 0x01,   0x7e, 0x00, 0x1e, 0x82, 0xed, 0xb0, 0x3d, 0x20
                db 0xf6, 0x21, 0x00, 0x6f, 0xf5, 0x5f, 0xcb, 0x13,   0xb3, 0x5f, 0xcb, 0x1b, 0xb3, 0x2f, 0x77, 0x23
                db 0xf1, 0x3c, 0x20, 0xf0, 0x06, 0x0c, 0x77, 0x2c,   0xc6, 0x14, 0x10, 0xfa, 0x0e, 0x05, 0x11, 0x34
                db 0x0e, 0x06, 0x06, 0xd5, 0x3e, 0x04, 0x82, 0x57,   0x73, 0x2c, 0x72, 0x2c, 0x10, 0xf6, 0xd1, 0x3e
                db 0x10, 0x83, 0x5f, 0x0d, 0x20, 0xeb, 0x01, 0xdc,   0x24, 0xcd, 0xef, 0x70, 0xc3, 0x4d, 0x5c

X5d4f:
                ld a, 7
                call Clear_screen
                ld iy, Intro.Sprite_00
                ld de, 0x3090 ; coords
                ld bc, 0x805 ; box 5x8
                call Draw_intro_box ; and wait a bit for fire
                call Print_iy ; "now he has awakened"
                call Draw_just_sprite ; and wait a miniscule amount
                call Draw_just_sprite ; and wait a miniscule amount

                ld a, 0x42     ; color.red + bg.black + bright
                ld (0x5a9c), a ; red eye glows
                call Draw_just_sprite
                call Wait_fire_some_time
; 5d675

                db 0x3e, 0x07, 0xcd,   0x39, 0x83, 0x21, 0x25, 0x62, 0x11, 0x82, 0x58
                db 0x01, 0x03, 0x05, 0xcd, 0x12, 0x62, 0x11, 0x08,   0x00, 0x01, 0x13, 0x07, 0xcd, 0xd2, 0x5d, 0x3e
                db 0x07, 0xd3, 0xfe, 0x21, 0x34, 0x62, 0x11, 0x82,   0x58, 0x01, 0x03, 0x05, 0xcd, 0x12, 0x62, 0x01
                db 0x00, 0x20, 0xcd, 0x33, 0x83, 0x3e, 0x00, 0xd3,   0xfe, 0xcd, 0xd5, 0x5d, 0x3e, 0x07, 0xcd, 0x39
                db 0x83, 0x21, 0x43, 0x62, 0x11, 0x28, 0x58, 0x01,   0x10, 0x0d, 0xcd, 0x12, 0x62, 0x11, 0x00, 0x0f
                db 0x01, 0x0f, 0x12, 0xcd, 0xd2, 0x5d, 0xcd, 0xd8,   0x5d, 0x26, 0x3c, 0xcd, 0x21, 0x83, 0xc2, 0x4f
                db 0x5d, 0xc9


Draw_intro_box: call DrawBox
X5dd5:          call Print_iy_with_alt_tileset
X5dd8:          call Print_iy
                jp Wait_fire_some_time

Draw_just_sprite:
                call Print_iy_with_alt_tileset
                ld h, 1
                jp Wait_fire_custom

Print_iy_with_alt_tileset:
                push iy
                pop hl
                ld bc, Intro.Tiles
                call Print_something_custom
                jr 1f

Print_iy:       push iy
                pop hl
                call Print.String_alt
1               push hl
                pop iy
                ret


DrawBox:
                ; DE = coords
                ; A = attrib
                ; C = width
                ; B = height
                ld (Buffer + 1), de ; coords
box_attrs+*     ld a, 6 ;sic: smc!
                ld (Buffer + 3), a ; attrs
                ld (Buffer + 4), a ; attrs

                ld hl, Buffer + 5
                push bc
                ld e, 0x22 ; ╔
                ld d, 0x24 ; ╗
                ld a, 0x23 ; ═
                call Box_top_btm
                ld (hl), 0xff
                inc hl
                pop bc
                dec c
                dec c

1               push bc
                call Box_sides
                pop bc
                dec c
                jr nz, 1b

                ld e, 39
                ld d, 41
                ld a, 40

                call Box_top_btm
                ld (hl), 0
                ld hl, Buffer + 1
                call Print.String_alt
                ret


Box_top_btm:
                dec b
                dec b
                ld (hl), e
                inc hl
1               ld (hl), a
                inc hl
                djnz 1b
                ld (hl), d
                inc hl
                ret

Box_sides:
                dec b
                dec b
                ld (hl), 0x25 ; ║
                inc hl
                ld (hl), b    ; advance B bytes (chr < 0x20)
                inc hl
                ld (hl), 0x25 ; ║
                inc hl
                ld (hl), 0xff
                inc hl
                ret

                ; intro.Sprites/texts are here, 0x5e4d..something

                org 0x5fd2
                db 0x40, 0x0e, 0x07, 0x47, 0x20, 0x20,   0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20
                db 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,   0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0xff
                db 0x54, 0x48, 0x45, 0x4e, 0x20, 0x54, 0x48, 0x45,   0x20, 0x53, 0x4c, 0x41, 0x55, 0x47, 0x48, 0x54

                org 0x6000
                db 0x45, 0x52, 0x20, 0x42, 0x45, 0x47, 0x41, 0x4e,   0x2e, 0xff, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20
                db 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,   0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x08, 0x10
                db 0x31, 0x32, 0x10, 0x33, 0x34, 0x35, 0x36, 0x37,   0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f
                db 0xff, 0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x01,   0x46, 0x47, 0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x10
                db 0x10, 0xff, 0x4d, 0x4e, 0x4f, 0x01, 0x01, 0x01,   0x01, 0x01, 0x01, 0x50, 0x51, 0x52, 0x10, 0x10
                db 0x53, 0x54, 0xff, 0x55, 0x56, 0x01, 0x57, 0x58,   0x59, 0x5a, 0x01, 0x01, 0x01, 0x5b, 0x5c, 0x5d
                db 0x5e, 0x5f, 0x60, 0xff, 0x61, 0x62, 0x63, 0x64,   0x65, 0x66, 0x67, 0x68, 0x69, 0x01, 0x6a, 0x6b
                db 0x6c, 0x10, 0x10, 0x10, 0xff, 0x6d, 0x6e, 0x6f,   0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77
                db 0x78, 0x79, 0x7a, 0x7b, 0x7c, 0xff, 0x7d, 0x7e,   0x7f, 0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86
                db 0x87, 0x88, 0x89, 0x8a, 0x8b, 0x8c, 0xff, 0x8d,   0x8e, 0x8f, 0x90, 0x91, 0x92, 0x92, 0x92, 0x92
                db 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0xff,   0x10, 0x10, 0x10, 0x9a, 0x9b, 0x9c, 0x92, 0x92
                db 0x92, 0x9d, 0x01, 0x9e, 0x9f, 0xa0, 0xa1, 0xa2,   0xff, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7, 0xa8, 0xa9
                db 0x92, 0x92, 0xaa, 0xab, 0xac, 0xad, 0xae, 0x01,   0xaf, 0xff, 0xb0, 0xb1, 0xb2, 0xb3, 0xb4, 0xb5
                db 0xb6, 0x92, 0xb7, 0xb8, 0xb9, 0xba, 0xbb, 0xbc,   0x01, 0x01, 0xff, 0x01, 0x01, 0x01, 0x01, 0x01
                db 0xbd, 0xbe, 0xbf, 0xc0, 0xc1, 0xc2, 0xc3, 0x10,   0xc4, 0x01, 0xc5, 0xff, 0x01, 0x01, 0x01, 0x01
                db 0x01, 0x01, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xcb,   0xcc, 0x01, 0x01, 0xcd, 0x00, 0x90, 0x00, 0x07

                org 0x6100
                db 0x47, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,   0x20, 0x20, 0x20, 0x20, 0x54, 0x48, 0x45, 0x59
                db 0x20, 0x4e, 0x45, 0x56, 0x45, 0x52, 0x20, 0x20,   0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20
                db 0xff, 0x20, 0x20, 0x20, 0x20, 0x54, 0x48, 0x4f,   0x55, 0x47, 0x48, 0x54, 0x20, 0x48, 0x45, 0x20
                db 0x57, 0x4f, 0x55, 0x4c, 0x44, 0x20, 0x52, 0x45,   0x54, 0x55, 0x52, 0x4e, 0x2e, 0x20, 0x20, 0x20
                db 0xff, 0x4e, 0x4f, 0x57, 0x20, 0x48, 0x41, 0x56,   0x4f, 0x4b, 0x20, 0x52, 0x45, 0x49, 0x47, 0x4e
                db 0x53, 0x20, 0x54, 0x48, 0x45, 0x20, 0x55, 0x4e,   0x44, 0x45, 0x52, 0x43, 0x49, 0x54, 0x59, 0x2e
                db 0x00, 0x90, 0x00, 0x07, 0x47, 0x20, 0x20, 0x20,   0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20
                db 0x49, 0x20, 0x41, 0x4d, 0x20, 0x48, 0x49, 0x52,   0x4f, 0x2c, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20
                db 0x20, 0x20, 0x20, 0x20, 0xff, 0x20, 0x54, 0x48,   0x45, 0x20, 0x4c, 0x41, 0x53, 0x54, 0x20, 0x4f
                db 0x46, 0x20, 0x54, 0x48, 0x45, 0x20, 0x42, 0x4c,   0x41, 0x44, 0x45, 0x4b, 0x4e, 0x49, 0x47, 0x48
                db 0x54, 0x53, 0x2e, 0x20, 0xff, 0x20, 0x49, 0x20,   0x4d, 0x55, 0x53, 0x54, 0x20, 0x52, 0x45, 0x42
                db 0x55, 0x49, 0x4c, 0x44, 0x20, 0x54, 0x48, 0x45,   0x20, 0x46, 0x49, 0x52, 0x45, 0x42, 0x4c, 0x41
                db 0x44, 0x45, 0x2c, 0x20, 0xff, 0x20, 0x20, 0x20,   0x20, 0x20, 0x41, 0x4e, 0x44, 0x20, 0x42, 0x52
                db 0x49, 0x4e, 0x47, 0x20, 0x54, 0x48, 0x45, 0x20,   0x44, 0x41, 0x57, 0x4e, 0x2e, 0x2e, 0x2e, 0x20
                db 0x20, 0x20, 0x20, 0x20, 0x00

Print_something_custom:
                push bc
                ld b, (hl)
                inc hl
                ld c, (hl)
                push hl
                call Print.Screen_addr ; de = addr
                pop hl
                pop bc
                inc hl

1               ld a, (hl)
                inc hl
                or a
                ret z

                push bc
                push hl
                inc a
                jr z, 3f
                dec a
                dec a
                ld h, 0
                ld l, a
                add hl, hl
                add hl, hl
                add hl, hl
                add hl, bc ; (a - 1) * 8 + BC
                call Print.Char
2               pop hl
                pop bc
                jr 1b

3               ld bc, (Print.String_alt.next_line_coord)
                call Print.Screen_addr
                jr 2b





                db 0xc5, 0xd5, 0x06, 0x00, 0xed, 0xb0,   0xd1, 0x3e, 0x20, 0x83, 0x5f, 0x3e, 0x00, 0x8a
                db 0x57, 0xc1, 0x10, 0xee, 0xc9, 0x07, 0x42, 0x07,   0x07, 0x43, 0x07, 0x46, 0x43, 0x46, 0x46, 0x46
                db 0x46, 0x46, 0x07, 0x46, 0x07, 0x07, 0x07, 0x07,   0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07
                db 0x07, 0x07, 0x07, 0x17, 0x17, 0x07, 0x07, 0x07,   0x07, 0x07, 0x07, 0x07, 0x07, 0x17, 0x17, 0x17
                db 0x17, 0x17, 0x17, 0x17, 0x07, 0x07, 0x07, 0x07,   0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07
                db 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07,   0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x17, 0x07
                db 0x07, 0x17, 0x17, 0x07, 0x07, 0x07, 0x07, 0x07,   0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x17, 0x17
                db 0x17, 0x17, 0x17, 0x07, 0x07, 0x07, 0x07, 0x07,   0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x17, 0x07
                db 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07,   0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x17
                db 0x17, 0x07, 0x07, 0x17, 0x07, 0x07, 0x07, 0x07,   0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x17
                db 0x07, 0x07, 0x07, 0x17, 0x17, 0x07, 0x07, 0x07,   0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07
                db 0x07, 0x07, 0x07, 0x17, 0x07, 0x07, 0x07, 0x07,   0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07
                db 0x07, 0x07, 0x07, 0x07, 0x17, 0x17, 0x07, 0x07,   0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07
                db 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07,   0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07
                db 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07,   0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07

                org 0x6300
                db 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07,   0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07
                db 0x07, 0x07, 0x07

                ; intro tiles come here, 0x6313..0x6a03
                include "intro.inc"

                assert ($ = 0x6a7b)
Joystuff:
; print the joystick menu, wait for input and patch-up the joystick routines
maybe_prepare_screen equ 0x8339

                xor a
                call Clear_screen
                ld hl, txt_joy
                call Print.Text

                ld de, 14
2               ld a, 0xf7
                in a, (0xfe)
                ld hl, joy_flags
                ld b, 4

1               rra
                jr nc, Joystuff_cont
                add hl, de
                djnz 1b
                jr 2b
Joystuff_cont
                ld a, (hl)
                inc hl
                ld (Ljoy_flag_001), a 
                ld (Ljoy_flag_002), a 
                ld a, (hl)
                ld (joy_flag_3a), a
                ld (joy_flag_3b), a
                inc hl
                ld a, (hl)
                ld (joy_flag_4), a
                inc hl
                ld a, (hl)
                ld (joy_flag_5), a
                inc hl
                ld a, (hl)
                ld (joy_flag_6), a
                inc hl
                ld a, (hl)
                ld (joy_flag_7), a
                inc hl
                ld a, (hl)
                ld (joy_flag_8), a
                inc hl
                ld de, Joystick_read
                ld bc, 18 ; install small, dev-specific Joystick_read routine
                ldir
                ret

txt_joy
                db 0x34, 0x0e, 0x07, 0x47 ; coords-x, coords-y, attrs-bottom-line, attrs-top-line
                db "1.JOYSTICK 1"
                db 0xff, 0xff
                db "2.JOYSTICK 2"
                db 0xff, 0xff
                db "3.KEMPSTON"
                db 0xff, 0xff
                db "4.PROTEK OR CURSOR"
                db 0

joy_flags
                ; joystick 1
                db 0x01, 0x1e : rra : dec e : inc e : inc d : dec d
                ld a, 0xef : in a, (0xfe) : bit 0, a : ret ; routine, pushed into Joystick_read

                ; joystick 2
                db 0x10, 0x0f : nop : dec d : inc d : inc e : dec e
                ld a, 0xf7 : in a, (0xfe) : bit 4, a : ret ; routine, pushed into Joystick_read

                ; joystick 3
                db 0x10, 0x0f : nop : inc d : dec d : inc e : dec e
                in a, (0x1f) : cpl : bit 4, a : ret : nop

                ; joystick 4
                db 0x01, 0x1e : rra : dec d : inc d : dec e : inc e
                ld a, 0xf7 : in a, (0xfe) : or 0xef : rrca : rrca : rrca : ld c, a
                ld a, 0xef : in a, (0xfe) : and c   : bit 0, a : ret

                org 0x6b4d
                db 0x00, 0x00, 0x00
                db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,   0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x50
                db 0x02, 0x00, 0x01, 0x00, 0x03, 0x00, 0x02, 0x00,   0x04, 0x00, 0x04, 0x00, 0x05, 0x00, 0x07, 0x00
                db 0x06, 0x00, 0x10, 0x00, 0x07, 0x00, 0x20, 0x00,   0x08, 0x00, 0x50, 0x00, 0x09, 0x00, 0x70, 0x00
                db 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x01, 0x00,   0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x50
                db 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x50,   0x00, 0x00, 0x50, 0x00, 0x00, 0x01, 0x00, 0x00
                db 0x00, 0x05, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,   0x00, 0x00, 0x00, 0x10, 0x9a, 0x82, 0x00, 0x00
                db 0x9b, 0x86, 0x00, 0x00, 0x9c, 0x8a, 0x00, 0x00,   0x9d, 0x8e, 0x00, 0x00, 0x9e, 0x92, 0x00, 0x00
                db 0x8b, 0xa2, 0x00, 0x00, 0x97, 0x96, 0x00, 0x00,   0x98, 0x9a, 0x00, 0x00, 0x99, 0x9e, 0x00, 0x00
                db 0x9f, 0x00, 0x5b, 0x00, 0xa0, 0x00, 0x5d, 0x01,   0x00, 0x00, 0xac, 0x00, 0x5f, 0x02, 0xa4, 0x00
                db 0x3d, 0x06, 0xad, 0xc2, 0x3f, 0x07, 0xa3, 0x00,   0x3a, 0x05, 0xa1, 0x00, 0x61, 0x03, 0xa2, 0x00
                db 0x63, 0x04, 0xa5, 0x82, 0x00, 0x00, 0xaa, 0x00,   0x00, 0x00, 0xab, 0x00, 0x00, 0x00, 0x8d, 0x00

                include "wip.asm"

	savesna "switchblade.sna", Start
